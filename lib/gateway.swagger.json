{
  "swagger": "2.0",
  "info": {
    "title": "gRPC Gateway Testing Project",
    "version": "0.1.0",
    "contact": {
      "name": "github.com/TMGaminghk/grpc-gateway",
      "url": "https://www.tmgaming.page/",
      "email": "kam.dev@tmgaming.page"
    }
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/login": {
      "post": {
        "summary": "User login",
        "operationId": "Gateway_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gatewayLoginReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gatewayLoginRequest"
            }
          }
        ],
        "tags": [
          "Gateway"
        ],
        "security": []
      }
    },
    "/v1/logout": {
      "post": {
        "summary": "User logout",
        "operationId": "Gateway_Logout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gatewayLogoutReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gatewayLogoutRequest"
            }
          }
        ],
        "tags": [
          "Gateway"
        ]
      }
    },
    "/v1/user": {
      "get": {
        "summary": "List user",
        "operationId": "Gateway_ListUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gatewayListUserReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Gateway"
        ]
      },
      "post": {
        "summary": "Create user",
        "operationId": "Gateway_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gatewayCreateUserReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gatewayCreateUserRequest"
            }
          }
        ],
        "tags": [
          "Gateway"
        ]
      },
      "put": {
        "summary": "Update user",
        "operationId": "Gateway_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gatewayUpdateUserReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gatewayUpdateUserRequest"
            }
          }
        ],
        "tags": [
          "Gateway"
        ]
      }
    },
    "/v1/user/{id}": {
      "get": {
        "summary": "Get user",
        "operationId": "Gateway_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gatewayGetUserReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Gateway"
        ]
      },
      "delete": {
        "summary": "Delete user",
        "operationId": "Gateway_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gatewayDeleteUserReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Gateway"
        ]
      }
    }
  },
  "definitions": {
    "companyCompanyInfo": {
      "type": "object",
      "properties": {
        "companyID": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "bussiness": {
          "type": "string"
        }
      }
    },
    "gatewayCreateUserReply": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/gatewayUserDetail"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "gatewayCreateUserRequest": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/gatewayUserDetail"
        }
      }
    },
    "gatewayDeleteUserReply": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "gatewayGetUserReply": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/gatewayUserDetail"
        }
      }
    },
    "gatewayListUserReply": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gatewayUserDetail"
          }
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "gatewayLoginReply": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/gatewayUserDetail"
        }
      }
    },
    "gatewayLoginRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "gatewayLogoutReply": {
      "type": "object"
    },
    "gatewayLogoutRequest": {
      "type": "object"
    },
    "gatewayUpdateUserReply": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/gatewayUserDetail"
        }
      }
    },
    "gatewayUpdateUserRequest": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/gatewayUserDetail"
        }
      }
    },
    "gatewayUserDetail": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/userUserInfo"
        },
        "company": {
          "$ref": "#/definitions/companyCompanyInfo"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "userGender": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "MALE",
        "FEMALE"
      ],
      "default": "UNKNOWN"
    },
    "userUserInfo": {
      "type": "object",
      "properties": {
        "userID": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "gender": {
          "$ref": "#/definitions/userGender"
        },
        "email": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string",
          "format": "int64"
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
